apiVersion: v1
kind: Namespace
metadata:
  name: hello
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: apiserver
  namespace: hello
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aggregated-apiserver-clusterrole
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  - validatingadmissionpolicies
  - validatingadmissionpolicybindings
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hello-apiserver-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: apiserver
  namespace: hello
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hello-aggregated-apiserver-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aggregated-apiserver-clusterrole
subjects:
- kind: ServiceAccount
  name: apiserver
  namespace: hello
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hello-apiserver:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: apiserver
  namespace: hello
---
apiVersion: v1
kind: Service
metadata:
  name: apiserver
  namespace: hello
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 6443
  selector:
    apiserver: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    apiserver: "true"
    app: apiserver
  name: apiserver
  namespace: hello
spec:
  replicas: 1
  selector:
    matchLabels:
      apiserver: "true"
      app: apiserver
  template:
    metadata:
      labels:
        apiserver: "true"
        app: apiserver
    spec:
      containers:
      - args:
        - --enable-etcd-storage
        - --etcd-servers=http://localhost:2379
        - --enable-auth
        - --enable-admission
        - -v
        - "6"
        image: docker.io/simple.io/apiserver:amd64-v1.0
        imagePullPolicy: IfNotPresent
        name: apiserver
      - env:
        - name: ALLOW_NONE_AUTHENTICATION
          value: "yes"
        image: bitnami/etcd:3.5.9
        name: etcd
        imagePullPolicy: IfNotPresent
      serviceAccountName: apiserver
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.simple.io
spec:
  group: simple.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: apiserver
    namespace: hello
  version: v1alpha1
  versionPriority: 10
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.simple.io
spec:
  group: simple.io
  groupPriorityMinimum: 100
  insecureSkipTLSVerify: true
  service:
    name: apiserver
    namespace: hello
  version: v1beta1
  versionPriority: 10
