---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: greatlazyman-system
  name: greatlazyman-system
---
# clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: simplecontroller
subjects:
- kind: ServiceAccount
  name: simplecontroller          # ServiceAccount 名称
  namespace: greatlazyman-system       # ServiceAccount 所在的命名空间
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: simplecontroller
  namespace: greatlazyman-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: simplecontroller
  name: simplecontroller
  namespace: greatlazyman-system
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: simplecontroller
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: simplecontroller
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - simplecontroller
            namespaces:
            - greatlazyman-system
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - simplecontroller
        image: ghcr.io/greatlazyman/simplecontroller:unknown
        imagePullPolicy: IfNotPresent
        name: controller
        resources:
          limits:
            cpu: 2
            memory: 200Mi
          requests:
            cpu: 300m
            memory: 200Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: simplecontroller
      serviceAccountName: simplecontroller
      terminationGracePeriodSeconds: 30
